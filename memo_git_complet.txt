
===========================
   MÃ‰MO GIT COMPLET (.TXT)
===========================

ðŸ”¹ CONFIGURATION DE BASE
---------------------------
git config --global user.name "TonPseudoGitHub"
git config --global user.email "tonemail@example.com"
â†’ Configure ton identitÃ© Git liÃ©e Ã  ton compte GitHub.

ðŸ”¹ INITIALISER UN DÃ‰PÃ”T GIT
---------------------------
git init
â†’ Initialise un nouveau dÃ©pÃ´t Git dans ton dossier.

ðŸ”¹ AJOUTER ET COMMIT DES FICHIERS
---------------------------
git add .
â†’ Ajoute tous les fichiers Ã  l'index Git.

git commit -m "Message de commit"
â†’ Enregistre les changements localement avec un message.

ðŸ”¹ CRÃ‰ER UNE NOUVELLE VERSION
---------------------------
git tag v1.0
â†’ CrÃ©e une version (tag) du projet.

ðŸ”¹ SYNCHRONISER AVEC GITHUB
---------------------------
git remote add origin https://github.com/TonPseudoGitHub/mon_repo.git
â†’ Lier le dossier local Ã  un dÃ©pÃ´t GitHub.

git branch -M main
â†’ Renomme la branche actuelle en "main".

git push -u origin main
â†’ Envoie le code vers le dÃ©pÃ´t GitHub (branche main).

git pull origin main
â†’ RÃ©cupÃ¨re les modifications depuis GitHub.

ðŸ”¹ RÃ‰SOUDRE UN CONFLIT
---------------------------
git merge autre_branche
â†’ Fusionne une autre branche dans celle actuelle.

Si conflit :
â†’ Modifier les fichiers entre <<<<<<< et >>>>>>>
â†’ Puis faire :
    git add fichier_conflit
    git commit -m "Conflit rÃ©solu"

ðŸ”¹ VERSIONNER DES FICHIERS LOURDS (GIT LFS)
---------------------------
git lfs install
â†’ Installe Git Large File Storage.

git lfs track "*.psd"
â†’ SpÃ©cifie quels fichiers doivent utiliser LFS.

git add .gitattributes
â†’ Ajoute le fichier de config gÃ©nÃ©rÃ© par LFS.

ðŸ”¹ VERSIONNER DES NOTEBOOKS JUPYTER
---------------------------
git add mon_notebook.ipynb
â†’ Ajoute le notebook normalement.

OU pour plus de propretÃ© :
pip install nbstripout
nbstripout --install
â†’ Nettoie les sorties des notebooks avant commit.

ðŸ”¹ INVITER UN COLLABORATEUR SUR GITHUB
---------------------------
1. Aller sur le dÃ©pÃ´t GitHub â†’ Settings â†’ Collaborators
2. Cliquer sur "Invite a collaborator"
3. Entrer le pseudo GitHub de la personne
4. Elle accepte l'invitation â†’ elle peut cloner et pousser

ðŸ”¹ COMMANDES DE BASE POUR TRAVAILLER EN Ã‰QUIPE
---------------------------
git clone https://github.com/TonPseudoGitHub/mon_repo.git
â†’ Cloner un dÃ©pÃ´t distant

git add .
git commit -m "modification"
git push
â†’ Envoie les modifications au dÃ©pÃ´t GitHub.

===========================
    FIN DU MÃ‰MO
===========================
